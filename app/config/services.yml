# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value

services:
#    service_name:
#        class: AppBundle\Directory\ClassName
#        arguments: ["@another_service_name", "plain_value", "%parameter_name%"]

    my_user_provider:
        class: AppBundle\Security\Core\User\FOSUBUserProvider
        #this is the place where the properties are passed to the UserProvider - see config.yml
        arguments: [@fos_user.user_manager, { sir: sir_id }, @doctrine.orm.entity_manager]

# ADMIN

    consigna.admin.organization:
        class: AppBundle\Admin\OrganizationAdmin
        arguments: [~, AppBundle\Entity\Organization, SonataAdminBundle:CRUD]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: label.organization}

    consigna.admin.file:
        class: AppBundle\Admin\FileAdmin
        arguments: [~, AppBundle\Entity\File, SonataAdminBundle:CRUD]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: label.file}

    consigna.admin.folder:
        class: AppBundle\Admin\FolderAdmin
        arguments: [~, AppBundle\Entity\Folder, SonataAdminBundle:CRUD]
        calls:
            - [ addChild, [@consigna.admin.file] ]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: label.folder}

    consigna.admin.user:
        class: AppBundle\Admin\UserAdmin
        arguments: [~, AppBundle\Entity\User, SonataAdminBundle:CRUD]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: label.user}


# EVENT LISTENERS

    consigna.listener.flash:
        class: AppBundle\EventListener\FlashListener
        arguments: [ @session, @translator ]
        tags:
            - { name: kernel.event_subscriber }

    consigna.listener.expirable:
        class: AppBundle\EventListener\Doctrine\ExpirableListener
        arguments: [ %expire_date% ]
        tags:
           - { name: doctrine.event_listener, event: prePersist }

    consigna.listener.user_access_shared:
        class: AppBundle\EventListener\Security\UserAccessSharedListener
        arguments: [ @doctrine.orm.entity_manager, @session ]
        tags:
            - { name: kernel.event_subscriber }

    consigna.listener.file_interface:
        class: AppBundle\EventListener\Doctrine\FileInterfaceListener
        arguments: [ @security.encoder_factory ]
        tags:
            - { name: doctrine.event_subscriber }

    consigna.virus.listener:
        class: AppBundle\EventListener\VirusConsignaListener
        arguments: ['@logger','@doctrine.orm.entity_manager', '@consigna.service.scan_file','@mailer']
        tags:
            - { name: kernel.event_subscriber }

    consigna.listener.logger:
        class: AppBundle\EventListener\LoggerListener
        arguments: [ @logger ]
        tags:
            - { name: kernel.event_subscriber }

    consigna.listener.user_login:
        class: AppBundle\EventListener\Security\UserLoginListener
        arguments: [@session, @security.authorization_checker]
        tags:
            - { name: kernel.event_subscriber }

    consigna.listener.locale:
        class: AppBundle\EventListener\LocaleListener
        arguments: [%supported_languages%]
        tags:
            - { name: kernel.event_subscriber }

    consigna.listener.upload:
        class: AppBundle\EventListener\UploadListener
        arguments: [ @service_container ]
        tags:
            - { name: 'kernel.event_listener', event: 'oneup_uploader.pre_upload', method: 'onPreUpload' }
            - { name: 'kernel.event_listener', event: 'oneup_uploader.post_upload', method: 'onUpload' }

# FORM TYPES

    appbundle.type.tags_text:
        class: AppBundle\Form\Type\TagsTextType
        arguments: ["@doctrine.orm.entity_manager"]
        tags:
            - { name: form.type, alias: tags_text }

# REPOSITORIES

    consigna.repository.file:
        class: AppBundle\Doctrine\ORM\FileRepository
        arguments: [ AppBundle:File ]
        factory: [ @doctrine, getRepository ]

    consigna.repository.folder:
        class: AppBundle\Doctrine\ORM\FolderRepository
        arguments: [ AppBundle:Folder ]
        factory: [ @doctrine, getRepository ]

    consigna.repository.organization:
        class: AppBundle\Doctrine\ORM\OrganizationRepository
        arguments: [ AppBundle:Organization ]
        factory: [ @doctrine, getRepository ]

# TWIG

    consigna.extension.size:
        class: AppBundle\Twig\TwigSizeExtension
        tags:
            - { name: twig.extension }

    twig.data_extension:
        class: Twig_Extensions_Extension_Date
        arguments: [ @translator ]
        tags:
            - { name: twig.extension }

    twig.text_extension:
        class: Twig_Extensions_Extension_Text
        tags:
            - name: twig.extension

# UPLOADER NAMER

    consigna.namer.real:
        class: AppBundle\Uploader\Namer\RealNamer

# VOTERS

    consigna.file_voter:
        class:      AppBundle\Security\Voter\FileVoter
        arguments: [@session]
        public:     false
        tags:
           - { name: security.voter }

    consigna.folder_voter:
        class:      AppBundle\Security\Voter\FolderVoter
        arguments: [@session]
        public:     false
        tags:
           - { name: security.voter }

